import{Y as r}from"./index-L_E5zAoe.js";import{f as m}from"./CgA8qwWT-CSwnprFQ.js";var c=Object.defineProperty,g=(i,t,e)=>t in i?c(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e,a=(i,t,e)=>g(i,typeof t!="symbol"?t+"":t,e);class p{constructor(t,e){a(this,"state","init"),a(this,"faceApi"),a(this,"estimation"),a(this,"photos",[]),a(this,"enableEarlyEstimation",!1),this.faceApi=new m(t||"models/faceapi"),this.estimation=null,this.init().then(()=>{this.state="ready",e&&e()}).catch(o=>{console.error(o),this.state="error",e&&e()})}async init(){return this.faceApi.waitUntilReady()}configure(t){(t==null?void 0:t.earlyEstimation)!==void 0&&(console.log("[Age Estimator] Configured early estimation:",t.earlyEstimation),this.enableEarlyEstimation=t.earlyEstimation)}async estimateAge(){if(this.state==="error")return null;for(const[t,e]of this.photos.entries()){const o=await this.faceApi.estimateAge(e);if(o!==null)return console.log(`[Age Estimator] Got result from photo ${t+1}`),o}return null}processFrame(t,e,o){if(this.state!=="error")switch(e){case r.Idle:this.state="ready",this.photos=[];break;case r.CollectingData:if(this.state!=="ready")break;this.photos.length===0&&this.enableEarlyEstimation&&t.getCanvas().then(s=>{const h=s.toDataURL(),n=new Image;n.src=h,this.photos.push(n),console.log("[Age Estimator] First photo taken."),this.estimateAge().then(l=>{this.estimation=l,console.log("[Age Estimator] Early estimation done",this.estimation)})});break;case r.AnalyzingData:if(this.state!=="ready")break;this.state="busy",t.getCanvas().then(s=>(this.photos.push(s),console.log(`[Age Estimator] Photo taken ${this.photos.length}`),console.log("[Age Estimator] Estimating age..."),this.estimateAge())).then(s=>{this.estimation=s,this.state="done",console.log("[Age Estimator] Done",this.estimation)}).catch(s=>{console.error("[Age Estimator] Error",s),this.state="done"});break}}}export{p as DefaultAgeEstimator};

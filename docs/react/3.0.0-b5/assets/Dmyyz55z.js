(function(){"use strict";let y,u;async function M(a){return y=a.track,u=new MediaStreamTrackProcessor({track:y}).readable.getReader(),(await u.read()).done?{error:"Stream reader is done"}:{}}async function k(a,t){const s=C=>{const n={error:C};self.postMessage({result:n,hash:t})},{croppingRegion:l,rotationDegrees:e}=a,w=performance.now();if(!u)return s("Reader is not initialized");const d=await u.read();if(!d)return s("Stream reader is undefined");if(d.done)return s("Stream reader is done");const{value:r}=d;if(!r)return s("Frame is null");const h=await createImageBitmap(r);if(h.width===0||h.height===0)return h.close(),r.close(),s("Bitmap has zero width or height");if(!new OffscreenCanvas(h.width,h.height).getContext("2d"))return h.close(),r.close(),s("Test canvas context is null");const f=v(h,l,e);h.close();const I={data:f};self.postMessage({result:I,hash:t},[f.data.buffer]),r.close();const m=performance.now();m-w>50&&console.warn(`CaptureFrameWorker: ${m-w} ms`)}function v(a,t,s){const e=new OffscreenCanvas(t.width,t.height).getContext("2d");if(!e)throw new Error("Could not get OffscreenCanvas context");let w,d,r,h;switch(s){case 180:e.drawImage(a,t.x,t.y,t.width,t.height,0,0,t.width,t.height);break;case 270:e.rotate(Math.PI),e.translate(0,-t.height),e.rotate(Math.PI/2),w=a.width-t.y-t.height,d=t.x,r=t.height,h=t.width,e.drawImage(a,w,d,r,h,0,0,t.height,t.width);break;case 0:e.translate(t.width,t.height),e.rotate(Math.PI),e.drawImage(a,a.width-t.x-t.width,a.height-t.y-t.height,t.width,t.height,0,0,t.width,t.height);break;case 90:e.translate(t.width,0),e.rotate(Math.PI/2),w=a.width-t.y-t.height,d=t.x,r=t.height,h=t.width,e.drawImage(a,w,d,r,h,0,0,t.height,t.width);break;default:const c=s*Math.PI/180;e.translate(t.width/2,t.height/2),e.rotate(-c);const x=Math.cos(c),f=Math.sin(c),I=-t.x*x-t.y*f-t.width/2,m=t.x*f-t.y*x-t.height/2;e.drawImage(a,I,m);break}return e.getImageData(0,0,t.width,t.height)}self.onmessage=async a=>{const{inputData:t,hash:s}=a.data,{type:l}=t;if(l==="start"){const e=await M(t);self.postMessage({result:e,hash:s})}else l==="read"&&k(t,s)}})();
